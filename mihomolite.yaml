# 机场订阅，名称不能重复
proxy-providers:
  机场订阅地址:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: "http://www.gstatic.com/generate_204"
      interval: 300
    proxy: DIRECT
    url: "节点订阅"
         
# # # # # 策略组参数锚点
#
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
#
pr: &pr {type: select, proxies: [🚀 常规代理, ⏱香港时延优选, 🚥香港故障转移, 🎛香港负载均衡, ⏱台湾时延优选, 🚥台湾故障转移, 🎛台湾负载均衡, ⏱日本时延优选, 🚥日本故障转移, 🎛日本负载均衡, ⏱韩国时延优选, 🚥韩国故障转移, 🎛韩国负载均衡, ⏱新国时延优选, 🚥新国故障转移, 🎛新国负载均衡, ⏱美国时延优选, 🚥美国故障转移, 🎛美国负载均衡, 自定义节点, DIRECT, REJECT]}

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)(\d+)?\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'

# 策略组
proxy-groups:
  - {name: 🚀 常规代理, type: select, proxies: [⏱香港时延优选, 🚥香港故障转移, 🎛香港负载均衡, ⏱台湾时延优选, 🚥台湾故障转移, 🎛台湾负载均衡, ⏱日本时延优选, 🚥日本故障转移, 🎛日本负载均衡, ⏱韩国时延优选, 🚥韩国故障转移, 🎛韩国负载均衡, ⏱新国时延优选, 🚥新国故障转移, 🎛新国负载均衡, ⏱美国时延优选, 🚥美国故障转移, 🎛美国负载均衡, 自定义节点, DIRECT, REJECT]}
  - {name: 📹 YouTube,!!merge <<: *pr}
  - {name: 🍀 Google,!!merge <<: *pr}
  - {name: 🤖 ChatGPT,!!merge <<: *pr}
  - {name: 👨🏿‍💻 GitHub,!!merge <<: *pr}
  - {name: Ⓜ️ 微软服务,!!merge <<: *pr}
  - {name: 🎮 Steam,!!merge <<: *pr}
  - {name: 🎵 TikTok,!!merge <<: *pr}
  - {name: 📲 Telegram,!!merge <<: *pr}
  - {name: 🎥 NETFLIX,!!merge <<: *pr}
  - {name: 🎶 网易音乐,!!merge <<: *pr}
  - {name: 🍎 苹果服务,!!merge <<: *pr}
  - {name: 🎯 全球直连,!!merge <<: *pr}
  - {name: 🐟 漏网之鱼,!!merge <<: *pr}

# 时延优选策略组
  - {name: ⏱香港时延优选, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱台湾时延优选, <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱日本时延优选, <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱韩国时延优选, <<: *UrlTest, filter: *FilterKR}
  - {name: ⏱新国时延优选, <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱美国时延优选, <<: *UrlTest, filter: *FilterUS}

# 故障转移策略组
  - {name: 🚥香港故障转移, <<: *FallBack, filter: *FilterHK}
  - {name: 🚥台湾故障转移, <<: *FallBack, filter: *FilterTW}
  - {name: 🚥日本故障转移, <<: *FallBack, filter: *FilterJP}
  - {name: 🚥韩国故障转移, <<: *FallBack, filter: *FilterKR}
  - {name: 🚥新国故障转移, <<: *FallBack, filter: *FilterSG}
  - {name: 🚥美国故障转移, <<: *FallBack, filter: *FilterUS}

# 负载均衡策略组
  - {name: 🎛香港负载均衡, <<: *LoadBalance, filter: *FilterHK}
  - {name: 🎛台湾负载均衡, <<: *LoadBalance, filter: *FilterTW}
  - {name: 🎛日本负载均衡, <<: *LoadBalance, filter: *FilterJP}
  - {name: 🎛韩国负载均衡, <<: *LoadBalance, filter: *FilterKR}
  - {name: 🎛新国负载均衡, <<: *LoadBalance, filter: *FilterSG}
  - {name: 🎛美国负载均衡, <<: *LoadBalance, filter: *FilterUS}
#
  - {name: 自定义节点, type: select, include-all-providers: true, filter: *FilterAll}

# 规则指向  
rules:
  - RULE-SET,private,DIRECT
  - RULE-SET,AI规则,🤖 ChatGPT
  - RULE-SET,Youtube规则,📹 YouTube
  - RULE-SET,Google规则,🍀 Google
  - RULE-SET,Github规则,👨🏿‍💻 GitHub  
  - RULE-SET,Telegram规则,📲 Telegram
  - RULE-SET,Netflix规则,🎥 NETFLIX
  - RULE-SET,Steam规则,🎮 Steam
  - RULE-SET,Tiktok规则,🎵 TikTok
  - RULE-SET,网易云规则,🎶 网易音乐
  - RULE-SET,微软规则,Ⓜ️ 微软服务
  - RULE-SET,苹果服务规则,🍎 苹果服务
  - RULE-SET,自定义规则,🚀 常规代理
  - RULE-SET,常规代理规则,🚀 常规代理
  - RULE-SET,geolocation-!cn,🚀 常规代理
  - RULE-SET,cn域名规则,🎯 全球直连
  - RULE-SET,cn_ip规则,🎯 全球直连
  - RULE-SET,google_ip规则,🍀 Google,no-resolve
  - RULE-SET,telegram_ip规则,📲 Telegram,no-resolve
  - RULE-SET,netflix_ip规则,🎥 NETFLIX,no-resolve
  - MATCH,🐟 漏网之鱼

# 订阅规则锚点  
rule-anchor:
  ip: &ip {type: http, interval: 7200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 7200, behavior: domain, format: mrs}
  class: &class {type: http, interval: 7200, behavior: classical, format: text}

# 订阅规则
rule-providers:
  private: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  AI规则: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/AI.list"}
  Youtube规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  Google规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  Github规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  Telegram规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  Netflix规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  Steam规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam.mrs"}
  Tiktok规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  网易云规则: {!!merge <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/NetEaseMusic.list"}
  微软规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  苹果服务规则: {!!merge <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list"}
  自定义规则: {!!merge <<: *class, url: "https://raw.githubusercontent.com/nh6666/clash-ini/refs/heads/main/Proxy.list"}
  常规代理规则: {!!merge <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn域名规则: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip规则: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip规则: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip规则: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip规则: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
